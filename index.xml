<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins Pipelines Workshop on DevOpsDays KC 2018 Jenkins Workshop Resources</title>
    <link>https://nrayapati.github.io/devopsdays_library/</link>
    <description>Recent content in Jenkins Pipelines Workshop on DevOpsDays KC 2018 Jenkins Workshop Resources</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nrayapati.github.io/devopsdays_library/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Name</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/buildname/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/buildname/</guid>
      <description> Build Name node { //this will replace the build number in the Jenkins UI. currentBuild.displayName = &amp;quot;DevOpsDaysKC - &amp;quot; + currentBuild.number //this will show up as a grey text block below the build number currentBuild.description = &amp;quot;Kansas City - 2018&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Jenkinsfile</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/jenkinsfile/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/jenkinsfile/</guid>
      <description> Jenkinsfile Code: node { echo &#39;Hello World&#39; }  </description>
    </item>
    
    <item>
      <title>Using Shared Library</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/library/using/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/library/using/</guid>
      <description> Using Shared Library @Library(&amp;quot;devopsdays@master&amp;quot;) _ @Library(&amp;quot;github.com/nrayapati/devopsdays_library@master&amp;quot;) _ node { def yaml = libraryResource &#39;org/devopsdays/test.yml&#39; println yaml writeFile file: &#39;test.groovy&#39;, text: &#39;&#39;&#39;// Methods in this file will end up as object methods on the object that load returns. def lookAtThis(String whoAreYou) { echo &amp;quot;Look at this, ${whoAreYou}! You loaded this from another file!&amp;quot; } return this;&#39;&#39;&#39; def loadMethod = load &#39;test.groovy&#39; loadMethod.lookAtThis(&amp;quot;Naresh&amp;quot;) }  </description>
    </item>
    
    <item>
      <title>createGitBranchV1</title>
      <link>https://nrayapati.github.io/devopsdays_library/steps/creategitbranchv1/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/steps/creategitbranchv1/</guid>
      <description> createGitBranchV1 </description>
    </item>
    
    <item>
      <title>Declarative vs Scripted Pipeline</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/declarative/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/declarative/</guid>
      <description> Declarative vs Scripted Declarative pipeline { agent any stages { stage(&#39;Example&#39;) { steps { echo &#39;Hello World&#39; } } } post { always { echo &#39;I will always say Hello again!&#39; } } }  Scripted node { try { echo &#39;Hello World&#39; } finally { echo &#39;I will always say Hello again!&#39; } }  </description>
    </item>
    
    <item>
      <title>Example</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/library/example/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/library/example/</guid>
      <description> Example @Library(&amp;quot;devopsdays&amp;quot;) _ println retryAndReturn { echo &amp;quot;DevOpsDays KC 2018&amp;quot; error &amp;quot;Expected..&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Remote Loader</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/remoteloader/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/remoteloader/</guid>
      <description> Pipeline Remote Loader node { def remoteScript = fileLoader.fromGit(&#39;jenkins/release.groovy&#39;, &amp;quot;https://github.com/nrayapati/devopsdays_test.git&amp;quot;, &#39;master&#39;, null, &#39;&#39;) remoteScript.prepare() remoteScript.release() remoteScript.clean() }  </description>
    </item>
    
    <item>
      <title>createGitBranchV2</title>
      <link>https://nrayapati.github.io/devopsdays_library/steps/creategitbranchv2/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/steps/creategitbranchv2/</guid>
      <description> createGitBranchV2 </description>
    </item>
    
    <item>
      <title>Closure vs Map</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/library/closure/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/library/closure/</guid>
      <description> Closure vs Map @Library(&amp;quot;devopsdays&amp;quot;) _ // Closure // Code at https://github.com/nrayapati/devopsdays_library/blob/master/vars/createGitBranchV1.groovy createGitBranchV1 { source = &amp;quot;master&amp;quot; target = &amp;quot;test&amp;quot; } // Map // Code at https://github.com/nrayapati/devopsdays_library/blob/master/vars/createGitBranchV2.groovy createGitBranchV2([source: &#39;gh-pages&#39;, target: &#39;test&#39;])  </description>
    </item>
    
    <item>
      <title>Lockable Resources</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/lockable/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/lockable/</guid>
      <description> Lockable REsources lock(quantity: 1, resource: &#39;devops1&#39;) { sleep time: 1, unit: &#39;MINUTES&#39; }  </description>
    </item>
    
    <item>
      <title>Node/Stage/Step/Groovy</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/node/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/node/</guid>
      <description> Node/Stage/Step/Groovy Code def roomNumber = 10 node { echo &#39;ANY&#39; } node(&#39;LINUX&#39;) { echo &#39;LINUX&#39; } node(&#39;DEVOPSDAYS&#39;) { stage(&#39;KC&#39;) { if(roomNumber==10) { echo &#39;Jenkins Pipelines&#39; } } } node(&#39;TEST&#39;) { echo &#39;TEST&#39; }  </description>
    </item>
    
    <item>
      <title>retryAndReturn</title>
      <link>https://nrayapati.github.io/devopsdays_library/steps/retryandreturn/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/steps/retryandreturn/</guid>
      <description> retryAndReturn </description>
    </item>
    
    <item>
      <title>Config File Provider</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/configfile/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/configfile/</guid>
      <description> Config File Provider node { configFileProvider([configFile(fileId: &#39;sample_json&#39;, variable: &#39;testJsonFileName&#39;)]) { println testJsonFileName.toString() def testJsonfile = readFile &amp;quot;${testJsonFileName.toString()}&amp;quot; println testJsonfile } }  </description>
    </item>
    
    <item>
      <title>Git vs Checkout SCM</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/scm/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/scm/</guid>
      <description> Git vs Checkout SCM Git node { stage(&amp;quot;Checkout&amp;quot;) { git branch: &#39;test&#39;, url: &#39;https://github.com/nrayapati/devopsdays_test.git&#39; sh &#39;ls -lrt&#39; } }  Checkout SCM Code at https://github.com/nrayapati/devopsdays_test/blob/master/Jenkinsfile
node { checkout scm sh &#39;ls -lrt&#39; }  </description>
    </item>
    
    <item>
      <title>retryWithPrompt</title>
      <link>https://nrayapati.github.io/devopsdays_library/steps/retrywithprompt/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/steps/retrywithprompt/</guid>
      <description>retryWithPrompt Executes given body and when it throws an exception, it will prompt user with options to Retry, Ignore or Abort. If it should be retried. The body will then be executed again. If the user clicks abort, an exception will be thrown aborting the pipeline. And there is an option to ignore to proceed further, need to careful of doing so, as some of the steps which were failed may cause some trouble down the line for other actions, so user can ignore when the step being surrounded by this step manually.</description>
    </item>
    
    <item>
      <title>Script Approval vs Sandbox</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/scriptapproval/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/scriptapproval/</guid>
      <description> Script Approval vs Sandbox Code at https://github.com/nrayapati/devopsdays_library/blob/master/vars/retryWithPrompt.groovy#L17
@Library(&amp;quot;devopsdays&amp;quot;) _ retryWithPrompt { error &amp;quot;Anticipated error...&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/tools/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/tools/</guid>
      <description> Tools node { def mvnHome stage(&#39;Preparation&#39;) { git &#39;https://github.com/jglick/simple-maven-project-with-tests.git&#39; mvnHome = tool &#39;maven-3.5.4&#39; } stage(&#39;Build&#39;) { if (isUnix()) { sh &amp;quot;&#39;${mvnHome}/bin/mvn&#39; -Dmaven.test.failure.ignore clean &amp;quot; } else { bat(/&amp;quot;${mvnHome}\bin\mvn&amp;quot; -Dmaven.test.failure.ignore clean /) } } }  </description>
    </item>
    
    <item>
      <title>SSH Agent</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/sshagent/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/sshagent/</guid>
      <description> SSH Agent node { step([$class: &#39;WsCleanup&#39;]) sshagent([&#39;devopsdays_ssh&#39;]) { git branch: &#39;test&#39;, url: &#39;https://github.com/nrayapati/devopsdays_test.git&#39; sh &amp;quot;ssh-keyscan -H github.com &amp;gt;&amp;gt; ~/.ssh/known_hosts&amp;quot; sh &amp;quot;git remote set-url origin git@github.com:nrayapati/devopsdays_test.git&amp;quot; sh &amp;quot;git config user.email naresh.rayapati@gmail.com&amp;quot; sh &amp;quot;git config user.name nrayapati&amp;quot; sh &#39;git checkout -b devopsdays&#39; sh &#39;git push origin devopsdays&#39; } }  </description>
    </item>
    
    <item>
      <title>Shell Script</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/shell/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/shell/</guid>
      <description> Shell Script node { git branch: &#39;test&#39;, url: &#39;https://github.com/nrayapati/devopsdays_test.git&#39; def gitCommit = sh(returnStdout: true, script: &#39;git rev-parse HEAD&#39;).trim() echo &amp;quot;Git commit sha: ${gitCommit}&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Credentials</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/credentials/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/credentials/</guid>
      <description> Credentials def printName def printPassword withCredentials([usernamePassword(credentialsId: &#39;devopsdays&#39;, passwordVariable: &#39;password&#39;, usernameVariable: &#39;userName&#39;)]) { // Binding variables echo userName echo password c // environment variables echo env.userName echo env.password printName = userName printPassword = password } echo env.userName echo env.password echo printName echo printPassword  </description>
    </item>
    
    <item>
      <title>Job DSL</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/jobdsl/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/jobdsl/</guid>
      <description> Job DSL folder(&amp;quot;DevOpsDays/3_Best_Practices/test_folder&amp;quot;) { } pipelineJob(&#39;DevOpsDays/3_Best_Practices/test_folder/simple_pipeline&#39;) { displayName(&#39;simple_pipeline&#39;) description(&#39;simple_pipeline&#39;) definition { cpsScm { scm { git { remote { url(&#39;https://github.com/nrayapati/devopsdays_test.git&#39;) branch(&#39;master&#39;) } } } } } triggers { githubPush() } properties { buildDiscarder { strategy { logRotator { artifactDaysToKeepStr(&#39;2&#39;) artifactNumToKeepStr(&#39;2&#39;) daysToKeepStr(&#39;2&#39;) numToKeepStr(&#39;2&#39;) } } } } }  </description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/advanced/flow/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/advanced/flow/</guid>
      <description> Flow Control @Library(&amp;quot;devopsdays&amp;quot;) _ input message: &#39;INPUT EXAMPLE&#39;, ok: &#39;DevOpsDays&#39;, parameters: [string(defaultValue: &#39;&#39;, description: &#39;&#39;, name: &#39;STRING_PARAM&#39;, trim: false), booleanParam(defaultValue: false, description: &#39;&#39;, name: &#39;BOOLEAN_PARAM&#39;)] retryWithPrompt { error &amp;quot;error during the demo&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Stash and Unstash</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/stash/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/stash/</guid>
      <description> Stash vs Unstash node(&#39;LINUX&#39;) { sh &amp;quot;mkdir -p output&amp;quot; writeFile file: &amp;quot;output/somefile&amp;quot;, text: &amp;quot;Hey look, some text.&amp;quot; stash name: &amp;quot;stash1&amp;quot;, includes: &amp;quot;output/*&amp;quot; sh &amp;quot;rm -rf output&amp;quot; sh &amp;quot;ls -lrt&amp;quot; } node(&#39;DEVOPSDAYS&#39;) { sh &#39;ls -lrt&#39; unstash name: &amp;quot;stash1&amp;quot; sh &#39;ls -lrt&#39; }  </description>
    </item>
    
    <item>
      <title>Clean Workspace</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/cleanws/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/cleanws/</guid>
      <description> Clean Workspace / Try/Catch stage(&#39;test&#39;) { node(&#39;LINUX&#39;) { step([$class: &#39;WsCleanup&#39;]) git branch: &#39;test&#39;, url: &#39;https://github.com/nrayapati/devopsdays_test.git&#39; step([$class: &#39;WsCleanup&#39;]) } } stage(&#39;test&#39;) { node(&#39;LINUX&#39;) { try { git branch: &#39;test&#39;, url: &#39;https://github.com/nrayapati/devopsdays_test.git&#39; sh &#39;ls -lrt&#39; } finally { deleteDir() sh &#39;ls -lrt&#39; } } }  </description>
    </item>
    
    <item>
      <title>Parameters</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/params/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/params/</guid>
      <description> Parameters def job_params = [booleanParam(defaultValue: false, description: &#39;&#39;, name: &#39;DEPLOY&#39;), string(defaultValue: &#39;Rao&#39;, description: &#39;User name with sudo access.&#39;, name: &#39;USER_NAME&#39;), password(defaultValue: &#39;secret&#39;, description: &#39;Only required with SSH_USER&#39;, name: &#39;PASSWORD&#39;)] properties([parameters(job_params)]) println params.USER_NAME println env.USER_NAME println &amp;quot;${params.USER_NAME}&amp;quot;  </description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/string/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/string/</guid>
      <description> Strings def myString = &#39;hello&#39; assert &#39;${myString} world&#39; == &#39;hello world&#39; assert &amp;quot;${myString} world&amp;quot; == &#39;hello world&#39; // assert &#39;&#39;&#39;\ // ${myString} world // foo bar // &#39;&#39;&#39; == &amp;quot;\\\nhello world\nfoo bar\n&amp;quot; assert &amp;quot;&amp;quot;&amp;quot;\ ${myString} world foo bar &amp;quot;&amp;quot;&amp;quot;.stripIndent() == &amp;quot;hello world\nfoo bar\n&amp;quot;  </description>
    </item>
    
    <item>
      <title>Parallel</title>
      <link>https://nrayapati.github.io/devopsdays_library/labs/basics/parallel/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nrayapati.github.io/devopsdays_library/labs/basics/parallel/</guid>
      <description> Parallel def branches = [:] branches[&amp;quot;ANY&amp;quot;] = { node { sleep time: 1, unit: &#39;MINUTES&#39; } } branches[&amp;quot;LINUX&amp;quot;] = { node(&#39;LINUX&#39;) { sleep time: 1, unit: &#39;MINUTES&#39; } } branches[&amp;quot;DEVOPSDAYS&amp;quot;] = { node(&#39;DEVOPSDAYS&#39;) { sleep time: 1, unit: &#39;MINUTES&#39; } } parallel branches  </description>
    </item>
    
  </channel>
</rss>